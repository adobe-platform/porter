service_name: sample-service

porter_version: v4.1.1

_container_base_inet: &CONTAINER_BASE_INET
  name: inet
  topology: inet

# This a sample environment.
#
# An environment is simply a way to organize deployments across regions and
# provide configuration per environment-region tuple.
environments:
- name: dev

  # comment this in if you want to SSH into EC2 or make other customizations
  # stack_definition_path: .porter/cloudformation.json

  # This is the role that porter will assume so that it can perform all the
  # AWS API actions needed to create, update, rollback, and delete
  # CloudFormation stacks and the resources they define
  #
  # run `porter bootstrap iam` and fill in your account id
  role_arn: arn:aws:iam::123456789012:role/porter-deployment

  # This environment only deploys to a single region
  regions:
  - name: us-west-2

    containers:
    - <<: *CONTAINER_BASE_INET

    # Your default or custom VPC id
    # If you're still in EC2-Classic comment this out
    vpc_id: vpc-TODO

    # Availability Zones are heterogeneous and differ between accounts so they
    # must be parameterized.
    # If you're still in EC2-Classic comment out subnet_id
    azs:
    - {name: us-west-2a, subnet_id: subnet-TODO}

    # The name of the SSH key used to login to EC2 instances
    # key_pair_name: TODO

    # The bucket for porter to use to upload builds. This will probably be
    # shared by multiple services in an org so it makes sense to name it
    # accordingly
    s3_bucket: TODO

    # For blue-green deployment porter needs to know what elb to promote
    # instances into.
    #
    # run `porter bootstrap elb` and fill this in
    elb: TODO
